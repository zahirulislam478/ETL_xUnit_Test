// <auto-generated />
using ETL_Shared.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ETL_API.Migrations
{
    [DbContext(typeof(PatientDbContext))]
    partial class PatientDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ETL_Shared.Models.Allergy", b =>
                {
                    b.Property<int>("AllergyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AllergyId"));

                    b.Property<string>("AllergyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AllergyId");

                    b.ToTable("Allergies");
                });

            modelBuilder.Entity("ETL_Shared.Models.Allergy_Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AllergyId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AllergyId");

                    b.HasIndex("PatientId");

                    b.ToTable("Allergy_Details");
                });

            modelBuilder.Entity("ETL_Shared.Models.DiseaseInformation", b =>
                {
                    b.Property<int>("DiseaseInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiseaseInformationId"));

                    b.Property<string>("DiseaseName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DiseaseInformationId");

                    b.ToTable("DiseaseInformations");
                });

            modelBuilder.Entity("ETL_Shared.Models.NCD", b =>
                {
                    b.Property<int>("NCDId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NCDId"));

                    b.Property<string>("NCDName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("NCDId");

                    b.ToTable("NCDs");
                });

            modelBuilder.Entity("ETL_Shared.Models.NCD_Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NCDId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NCDId");

                    b.HasIndex("PatientId");

                    b.ToTable("NCD_Details");
                });

            modelBuilder.Entity("ETL_Shared.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

                    b.Property<int>("DiseaseInformationId")
                        .HasColumnType("int");

                    b.Property<int?>("Epilepsy")
                        .HasColumnType("int");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PatientId");

                    b.HasIndex("DiseaseInformationId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("ETL_Shared.Models.Allergy_Detail", b =>
                {
                    b.HasOne("ETL_Shared.Models.Allergy", "Allergy")
                        .WithMany("Allergy_Details")
                        .HasForeignKey("AllergyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETL_Shared.Models.Patient", "Patient")
                        .WithMany("Allergy_Details")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allergy");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("ETL_Shared.Models.NCD_Detail", b =>
                {
                    b.HasOne("ETL_Shared.Models.NCD", "NCD")
                        .WithMany("NCD_Details")
                        .HasForeignKey("NCDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETL_Shared.Models.Patient", "Patient")
                        .WithMany("NCD_Details")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NCD");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("ETL_Shared.Models.Patient", b =>
                {
                    b.HasOne("ETL_Shared.Models.DiseaseInformation", "DiseaseInformation")
                        .WithMany("Patients")
                        .HasForeignKey("DiseaseInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiseaseInformation");
                });

            modelBuilder.Entity("ETL_Shared.Models.Allergy", b =>
                {
                    b.Navigation("Allergy_Details");
                });

            modelBuilder.Entity("ETL_Shared.Models.DiseaseInformation", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("ETL_Shared.Models.NCD", b =>
                {
                    b.Navigation("NCD_Details");
                });

            modelBuilder.Entity("ETL_Shared.Models.Patient", b =>
                {
                    b.Navigation("Allergy_Details");

                    b.Navigation("NCD_Details");
                });
#pragma warning restore 612, 618
        }
    }
}
